version: '3'
services:

  app:
    image: jwilder/whoami
    environment:
      - VIRTUAL_HOST=${HOST}
      - VIRTUAL_PATH=/${DOMAIN_PATH}/whoami
    networks:
      - topDomainProxy

  database:
    env_file: .env
    container_name: ${DOMAIN_PATH}database
    image: postgres:12
    restart: ${RESTART}
    volumes:
      - ./Backend/data/database:/var/lib/postgresql/data
    networks:
      - directus
    environment:
      POSTGRES_USER: 'directus'
      POSTGRES_PASSWORD: 'directus'
      POSTGRES_DB: 'directus'

  cache:
    env_file: .env
    container_name: ${DOMAIN_PATH}cache
    image: redis:6
    networks:
      - directus

  directus:
    container_name: ${DOMAIN_PATH}directus
    env_file: .env
    restart: ${RESTART}
    image: directus/directus:9.0.0-rc.94
    #image: directus/directus:latest
    expose:
      - ${BACKEND_PORT}
    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./Backend/uploads:/directus/uploads
      # Make sure to also mount the volume when using SQLite
      - ./Backend/database:/directus/database
      # If you want to load extensions from the host
      - ./Backend/extensions:/directus/extensions
    networks:
      - directus
      - topDomainProxy
    depends_on:
      - cache
      - database
    environment:
      VIRTUAL_HOST: ${HOST}
      VIRTUAL_PATH: /${DOMAIN_PATH}/${BACKEND_PATH}/
      VIRTUAL_DEST: /
      VIRTUAL_PORT: ${BACKEND_PORT}

      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'

      DB_CLIENT: 'pg'
      DB_HOST: 'database'
      DB_PORT: '5432'
      DB_DATABASE: 'directus'
      DB_USER: 'directus'
      DB_PASSWORD: 'directus'

      CACHE_ENABLED: ${BACKEND_CACHING}
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'

      ADMIN_EMAIL: 'admin@example.com'
      ADMIN_PASSWORD: 'd1r3ctu5'

      REFRESH_TOKEN_COOKIE_SAME_SITE:  "lax"
      #REFRESH_TOKEN_COOKIE_SAME_SITE: 'lax' # to allow to send cookies for like "localhost"
      CORS_ALLOWED_HEADERS: 'Authorization,Accept,Accept-Encoding,Accept-Language,Access-Control-Request-Headers,Access-Control-Request-Method,Cache-Control,Connection,Content-Type,Host,Origin,Pragma,Referer,Sec-Fetch-Mode,User-Agent'

      # Make sure to set this in production
      # (see https://docs.directus.io/reference/environment-variables/#general)
      PUBLIC_URL: http://${HOST}/${DOMAIN_PATH}/${BACKEND_PATH}

      #ROOT_REDIRECT: "http://192.168.178.35/myapp/app/"

      OAUTH_PROVIDERS: "Studip,Studiptest"
      OAUTH_STUDIP_OAUTH: "2"
      OAUTH_STUDIP_KEY: "sso_consumer"
      OAUTH_STUDIP_SECRET: "l1Q7zkOL59cRqWBkQ12ZiGVW2DBL"
      OAUTH_STUDIP_SCOPE: "email firstname lastname"
      OAUTH_STUDIP_STATE: 'true'

      OAUTH_STUDIPTEST_OAUTH: "2"
      OAUTH_STUDIPTEST_KEY: "sso_consumer"
      OAUTH_STUDIPTEST_SECRET: "l1Q7zkOL59cRqWBkQ12ZiGVW2DBL"
      OAUTH_STUDIPTEST_SCOPE: "email firstname lastname"
      OAUTH_STUDIPTEST_STATE: 'true'

      NODE_TLS_REJECT_UNAUTHORIZED: 0 # The HTTPS cert is not complete: "unable to verify the first certificate"

      OAUTH_STUDIP_PROFILE_URL: '${OAUTH_STUDIP_URL}/api/getProfile'
      OAUTH_STUDIP_AUTHORIZE_URL: "${OAUTH_STUDIP_URL}/app/login"
      OAUTH_STUDIP_ACCESS_URL: "${OAUTH_STUDIP_URL}/api/verifytoken"

      OAUTH_STUDIPTEST_PROFILE_URL: '${OAUTH_STUDIPTEST_URL}/api/getProfile'
      OAUTH_STUDIPTEST_AUTHORIZE_URL: "${OAUTH_STUDIPTEST_URL}/app/login"
      OAUTH_STUDIPTEST_ACCESS_URL: "${OAUTH_STUDIPTEST_URL}/api/verifytoken"


networks:
  directus:
  topDomainProxy:
    external: true